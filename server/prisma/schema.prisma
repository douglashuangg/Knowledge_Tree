generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "rhel-openssl-1.0.x",  "windows",  "linux-musl", "darwin"]
}

datasource db {
  provider = "postgresql"
  url      = env("PROD_DATABASE_URL")
}

model edges {
  id            String     @id
  source        String?
  target        String?
  source_handle String?
  target_handle String?
  file_id       Int
  files         files? @relation(fields: [file_id], references: [file_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_file_id")
}

model files {
  file_id    Int          @id @default(autoincrement())
  title      String       @db.VarChar(255)
  body       String?
  user_id    Int?
  users      users?       @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_id")
  nodes nodes[]
  edges edges[]
  lastAccessed DateTime?
}

model users {
  user_id  Int     @id @default(autoincrement())
  username String  @db.VarChar(50)
  password String  @db.VarChar(255)
  email    String  @unique @db.VarChar(255)
  files    files[]
}

model nodes {
  node_id       Int       @id @default(autoincrement())
  location      Decimal[] @db.Decimal
  color         String?   @db.VarChar(7)
  file_id       Int?
  x             Decimal?  @db.Decimal
  y             Decimal?  @db.Decimal
  width         Decimal?  @db.Decimal
  height        Decimal?  @db.Decimal
  text          String?
  files         files?    @relation(fields: [file_id], references: [file_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_file_id")
  type          String?
}
